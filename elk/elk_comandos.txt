#Fuentes
#https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-on-debian-10
#https://www.elastic.co/guide/en/beats/filebeat/current/setup-repositories.html
#https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-ubuntu-14-04
#https://logz.io/learn/complete-guide-elk-stack/#intro
#Comandos

#Instalando java
sudo apt install default-jre
sudo apt install default-jdk

#Pre - ELK
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
sudo apt-get install apt-transport-https
echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list

#Elastic
sudo apt -y install elasticsearch
#Archivo /etc/elastichsearch/elasticsearch.yml buscar la linea network.host: localhost y descomentar
sudo systemctl restart elasticsearch
sudo systemctl enable elasticsearch

#Kibana
sudo apt -y install kibana
#Archivo /etc/kibana/kibana.yml buscar la linea server.host: "localhost" y descomentar
sudo systemctl enable kibana
sudo systemct restart kibana

#Nginx
sudo apt install nginx apache2-utils
#Crear admin que pueda acceder a la interfaz web
sudo htpasswd -c /etc/nginx/htpasswd.users admin
#Editar el archivo /etc/nginx/sites-available/default con lo siguiente
'''
server {
    listen 80;

    server_name example.com;

    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/htpasswd.users;

    location / {
        proxy_pass http://localhost:5601;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;        
    }
}
'''
#Reiniciar servicio
sudo systemctl restart nginx

#Logstash
sudo apt install logstash 
#Generando certificados
sudo mkdir -p /etc/pki/tls/certs
sudo mkdir /etc/pki/tls/private
sudo vim /etc/ssl/openssl.cnf
'''
subjectAltName = IP: IP_DEL_SERVIDOR
'''
cd /etc/pki/tls
sudo openssl req -config /etc/ssl/openssl.cnf -x509 -days 3650 -batch -nodes -newkey rsa:2048 -keyout private/logstash-forwarder.key -out certs/logstash-forwarder.crt
#Configuracion basica de logstash
sudo vim /etc/logstash/conf.d/02-beats-input.conf
'''
input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
    ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
  }
}
'''
sudo vim /etc/logstash/conf.d/10-syslog-filter.conf
'''
filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}
'''
sudo vim /etc/logstash/conf.d/30-elasticsearch-output.conf
'''
output {
  elasticsearch {
    hosts => ["localhost:9200"]
    sniffing => true
    manage_template => false
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
  }
}
'''
sudo systemctl restart logstash
sudo systemctl enable logstash
