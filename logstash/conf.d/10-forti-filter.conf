input {
	udp {
		port => 5514
		type => "syslog_forti"
	}
        tcp {
                port => 5514
                type => "syslog_forti"
        }
}

filter {
  if [type] == "syslog_forti" {
	mutate {
         add_tag => ["fortigate"]
         replace => { "type" => "fortigate" }
        }
    grok {
        patterns_dir => [ "/etc/logstash/patterns" ]
        break_on_match => false
#        match => ["message", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:message}"]
        match => ["message", "%{SYSLOG5424PRI:syslog_index}date=%{FORTIDATE:date} time=%{TIME:time}%{GREEDYDATA:message}"]
        overwrite => [ "message" ]
        tag_on_failure => [ "failure_grok_fortigate" ]
    }
    kv { }
    if [msg] {
        mutate {
            replace => [ "message", "%{msg}" ]
        }
    }
    mutate {
        convert => { "duration" => "integer" }
        convert => { "rcvdbyte" => "integer" }
        convert => { "rcvdpkt" => "integer" }
        convert => { "sentbyte" => "integer" }
        convert => { "sentpkt" => "integer" }
        convert => { "cpu" => "integer" }
        convert => { "disk" => "integer" }
        convert => { "disklograte" => "integer" }
        convert => { "fazlograte" => "integer" }
        convert => { "mem" => "integer" }
        convert => { "totalsession" => "integer" }
    }
    mutate {
        rename => { "ui" => "SRC_IP" }
        add_field => ["logTimestamp", "%{date} %{time}"]
        add_field => ["loglevel", "%{level}"]
        replace => [ "fortigate_type", "%{type}"]
        replace => [ "fortigate_subtype", "%{subtype}"]
        remove_field => [ "msg", "type", "level", "date", "time" ]
    }
    mutate {
           add_field => { "source.ip" => "%{srcip}" }
    }
    if [status] == "clash" {

        grok {
            match => { "new_status" => "state=%{GREEDYDATA:new_status_state1} tuple-num=%{GREEDYDATA:new_status_tuple-num1} policyid=%{GREEDYDATA:new_status_policyid1} identidx=%{GREEDYDATA:new_status_identidx1} dir=%{GREEDYDATA:new_status_dir1} act=%{GREEDYDATA:new_status_act1} hook=%{GREEDYDATA:new_status_hook1} dir=%{GREEDYDATA:new_status_dir2} act=%{GREEDYDATA:new_status_act2} hook=%{GREEDYDATA:new_status_hook2} dir=%{GREEDYDATA:new_status_dir3} act=%{GREEDYDATA:new_status_act3} hook=%{GREEDYDATA:new_status_hook3}" }
        }
        grok {
            match => { "old_status" => "state=%{GREEDYDATA:old_status_state1} tuple-num=%{GREEDYDATA:old_status_tuple-num1} policyid=%{GREEDYDATA:old_status_policyid1} identidx=%{GREEDYDATA:old_status_identidx1} dir=%{GREEDYDATA:old_status_dir1} act=%{GREEDYDATA:old_status_act1} hook=%{GREEDYDATA:old_status_hook1} dir=%{GREEDYDATA:old_status_dir2} act=%{GREEDYDATA:old_status_act2} hook=%{GREEDYDATA:old_status_hook2} dir=%{GREEDYDATA:old_status_dir3} act=%{GREEDYDATA:old_status_act3} hook=%{GREEDYDATA:old_status_hook3}" }
        }
    }
#    mutate {
#        add_field => { "FORTIDATETIME" => "%{date} %{time}" }
#    }
#    date {
#        match => [ "FORTIDATETIME", "YYYY-MM-dd HH:mm:ss" ]
#        timezone => "America/Mexico_City"
#        target => "@timestamp"
#    }
    date {
        match => ["logTimestamp", "YYYY-MM-dd HH:mm:ss"]
        remove_field => ["logTimestamp", "year", "month", "day", "time", "date"]
        add_field => ["type", "syslog"]
        timezone => "America/Mexico_City"
        target => "@timestamp"
    }

  }
}

output {
  elasticsearch { 
	    hosts => ["https://172.16.100.1:9200","https://172.16.100.2:9200","https://172.16.100.5:9200"]
            ssl => true
            cacert => "/etc/logstash/ca.pem"
            user => "elastic"
            password => "elastic"
#     hosts => ["172.16.200.221:9200","172.16.200.222:9200"] 
            index => "forti-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}
